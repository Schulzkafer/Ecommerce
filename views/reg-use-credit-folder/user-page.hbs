<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <link href="/direction-line.css" rel="stylesheet">
  <script async src="https://kit.fontawesome.com/00d30ca4c1.js" crossorigin="anonymous"></script>
  <style>

* {
  box-sizing:border-box;
}

.info-about-user {
  display: inline-block;
  width:50%;
  padding:1em;
  font-size:1.3em;
  line-height: 1.5em;
   text-align:left;
  background-color: #F3DDC3;
  list-style-type: none;
}

.info-about-user ul {
    list-style-type: none;
}

.toRegPosLeft {
  float:left;
}
.toRegPosRight {
  float:right;
}

.info-about-user-to-change {
  display: inline-block;
  width:50%;
  padding:1em;
  text-align:left;
  font-size:1.3em;
  line-height: 1.5em;
  background-color: #F3DDC3;
}

h2 {
  margin-bottom:0.5em;
}

{{!-- ----------------вынести в общий css------------------ --}}
.regulation-label-form, #to-do-table {
  display: table;
}

.tableRow,  #to-do-table li{
  display:table-row;
}

.tableRow p, #to-do-table li p {
  display:table-cell;
}

.tableRow p:first-child, #to-do-table li p:first-child{
  text-align:right;
  }
{{!-- ----------------^^^^ вынести в общий css ^^^------------------ --}}


.style-buttons-forms{
  width:7em;
  height:3em;
color:#FFFFFF;
background-color: #8EB1BF;
cursor:pointer;
}

#make-deposit-button a {
color:#FFFFFF;
text-decoration: none;
}

#painel-buttons {
margin-top:1em;  
display: flex;
}

#painel-buttons button {
  margin-right:1em;
}

  </style>


</head>

<body>

{{> directionline}}

 
 
    <div class='toRegPosLeft info-about-user'>
    <h2 style='background-color:"red"'>Profile</h2>
    <ul id="to-do-table">
      <li><p>Your email:&ensp;&ensp;</p><p> <b id="email-user-info"></b></p></li>
      <li><p>Your name:&ensp;&ensp;</p> <b id="name-user-info"></b></p></li>
      <li><p>Your surname:&ensp;&ensp;</p><p> <b id="surname-user-info"></b></p></li>
      <li><p>Your credit:&ensp;&ensp;</p><p>  <b id="credit-user-info">0.00$</b></li></p>
    </ul>

    <div id="painel-buttons">
    <button class='style-buttons-forms' id="make-deposit-button"><a href="/userPage/addCredit">Make a deposit</a></button>
    <button onclick="changeUserData('#profile-form-changing')" class='style-buttons-forms'>Change your profile</button>
    <button onclick="changePassword('#password-form-changing')" class='style-buttons-forms'>Change your password</button>
  </div> 
   </div>

<div class='toRegPosLeft'>
    <form id="password-form-changing" name="passwordformchanging">
      <h3 id="result-changing-password"></h3>
      <input name="idUser" hidden>
      <label>Type your actual password</label>
      <input name="actpassword"><br><br>
      <label>Type your new password</label>
      <input type="password" name="newpassword" id="new-password">
      <button id="show-password-toChange">show password</button><br>
      <input type="submit" value="confirm">
      <h2 id="fieldResultPasswordChanging"></h2>
    </form>
    </div>

<div class='toRegPosRight info-about-user-to-change' hidden>
  <h2>Change your data</h2>
    <form id="profile-form-changing" name="profileformchanging" class="regulation-label-form">
      <h3 id="result-changing-frase"></h3>
      <p><input name="idUser" hidden></p>
    
      <div class="tableRow"><p><label>New email&ensp;&ensp;</label></p>
      <p><input name="changeemail"></p></div>

      <div class="tableRow"><p><label>New name&ensp;&ensp;</label></p>
      <p><input name="changename"></p></div>

      <div class="tableRow"><p><label>New surname&ensp;&ensp;</label></p>
      <p><input name="changesurname"></p></div>

      <div class="tableRow"><p><label>Password to confirm&ensp;&ensp;</label></p>
      <p><input name="passwordconfirm"></p></div>

      <div class="tableRow"><p></p>
      <p><input type="submit" value="Save" class="style-buttons-forms" style="margin-top: 1.6em;"></p></div>
    </form>
</div>

  

  <script src="/common-functions.js"></script>
  <script src="../../mycookie.js"></script>
  <script>
    'use strict';

body.addEventListener('click',  function () {
cleanHtmlCommonF(['#fieldResultPasswordChanging', '#result-changing-frase']);
});


    document.querySelector('#password-form-changing').hidden = true;

    function changePassword(arg) {
      showHideStuffCommonF(arg);
      let formPassword = document.forms.passwordformchanging;
      if (formPassword.hidden == true) {
        formPassword.removeEventListener('submit', sendPasswordChanging);
        return;
      }
      formPassword.elements.idUser.value = getCookie('id');
      document.querySelector('#show-password-toChange').onclick = (e) => {
        e.preventDefault();
        let inp = document.querySelector('#new-password');
        inp.type = (inp.type == "password") ? 'text' : "password";
      }
      formPassword.addEventListener('submit', sendPasswordChanging);
    }


    async function sendPasswordChanging(e) {
      e.preventDefault();
       let formInAction = document.querySelector('#password-form-changing');
      const formData = new FormData(formInAction);
      const plainFormData = Object.fromEntries(formData.entries());
      const formDataJsonString = JSON.stringify(plainFormData);

      let response = await fetch('/changePassword', {
        method: 'PUT',
        body: formDataJsonString,
        headers: {
          'Content-Type': 'application/json'
        }
      });

      let result = await response;
      let fieldResultPasswordChanging = document.querySelector('#fieldResultPasswordChanging');
      if (result.status == 400) fieldResultPasswordChanging.innerHTML = 'Bad Request';
      else if (result.status == 500) fieldResultPasswordChanging.innerHTML = 'Server error, try again, please';
      else if (result.status == 200) {
        fieldResultPasswordChanging.innerHTML = 'Operation Success';
        formInAction.elements.newpassword.value = '';
        formInAction.elements.actpassword.value = '';
      }
    }





    function completeUserInformation() {
      let emailUserInfo = document.querySelector('#email-user-info');
      emailUserInfo.innerHTML = getCookie('email');

      let nameUserInfo = document.querySelector('#name-user-info');
      nameUserInfo.innerHTML = getCookie('name') || '';

      let surNameUserInfo = document.querySelector('#surname-user-info');
      surNameUserInfo.innerHTML = getCookie('surname') || '';

      let creditUserInfo = document.querySelector("#credit-user-info");
      creditUserInfo.innerHTML = getCookie('credit');


    }


    completeUserInformation()

    document.querySelector('#profile-form-changing').hidden = true;


    function changeUserData(arg) {
      showHideStuffCommonF(arg);
      if (document.querySelector('#profile-form-changing').hidden != false) {
        document.querySelector('#profile-form-changing').removeEventListener('submit', sendUserInfoToChange);
        return;
      }

      let formToComplete = document.forms.profileformchanging;
      formToComplete.elements.idUser.value = getCookie('id')
      formToComplete.elements.changeemail.value = document.querySelector('#email-user-info').innerHTML;
      formToComplete.elements.changename.value = document.querySelector('#name-user-info').innerHTML;
      formToComplete.elements.changesurname.value = document.querySelector('#surname-user-info').innerHTML;

      let sendChangingData = document.querySelector('#send-changing-data');
      document.querySelector('#profile-form-changing').addEventListener('submit', sendUserInfoToChange);
    }



    async function sendUserInfoToChange(e) {
      e.preventDefault();
      const formData = new FormData(document.querySelector('#profile-form-changing'));
      const plainFormData = Object.fromEntries(formData.entries());
      const formDataJsonString = JSON.stringify(plainFormData);

      let response = await fetch('/changeDataUser', {
        method: 'PUT',
        body: formDataJsonString,
        headers: {
          'Content-Type': 'application/json'
        }
      });

      let result = await response;
      let resultChangingFrase = document.querySelector('#result-changing-frase');
      if (result.status == 400 || result.status == 401) {
        resultChangingFrase.innerHTML = 'incorect data';
      } else if (result.status == 500) {
        resultChangingFrase.innerHTML = 'please try again';
      } else if (result.status == 200) {
        resultChangingFrase.innerHTML = 'operation competed';
        let res = await result.json();
        setCookie('name', res.changename, { 'max-age': 3600 });
        setCookie('surname', res.changesurname, { 'max-age': 3600 });
        if (res.changeemail != '') setCookie('email', res.changeemail, { 'max-age': 3600 });
        completeUserInformation()
      }
    }






  </script>
  

</body>

</html>